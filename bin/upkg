#!/usr/bin/env ruby

# frozen_string_literal: true

require_relative '../lib/upkg'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: upkg [options]'

  opts.on('-i', '--install', 'Install packages') do
    options[:install] = true
  end

  opts.on('-u', '--update', 'Update packages') do
    options[:update] = true
  end

  opts.on('-a source package', '--add source package', 'Add package') do |add_arg|
    options[:add] ||= []
    package = ARGV[0]
    ARGV.shift
    options[:add] << [add_arg, package]
  end

  opts.on('-r source package', '--remove source package', 'Remove package') do |remove_args|
    options[:remove] ||= []
    package = ARGV[0]
    ARGV.shift
    options[:remove] << [remove_args, package]
  end
end.parse!

file_path = File.expand_path('../../packages.upkg', __FILE__)
installer = Upkg::PackageInstaller.new(file_path)

installer.update_packages if options[:update]
installer.install_packages if options[:install]

options[:add]&.each do |source_name, package_name|
  installer.add_package(source_name, package_name)
end

options[:remove]&.each do |source_name, package_name|
  installer.remove_package(source_name, package_name)
end

puts I18n.t('help').yellow if options.empty? || (options.keys & %i[install update add remove]).empty?
